version: '3'

services:
  # Database Engines
  # ===========================================================================

  # MySQL
  # ---------------------------------------------------------------------------
  db_mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: coderhouse
      MYSQL_DATABASE: coderhouse
      MYSQL_USER: coderhouse
      MYSQL_PASSWORD: coderhouse
    ports:
      - "3308:3306"
    volumes:
      - ./mysql/config/custom.cnf:/etc/mysql/conf.d/custom.cnf
      - ./mysql/sql_initdb:/docker-entrypoint-initdb.d
      - ./data:/opt/data

  # MySQL Semana 3
  # ---------------------------------------------------------------------------
  db_mysql_semana3:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: coderhouse
      MYSQL_DATABASE: coderhouse
      MYSQL_USER: coderhouse
      MYSQL_PASSWORD: coderhouse
    ports:
      - "3309:3306"
    volumes:
      - ./mysql_semana3/config/custom.cnf:/etc/mysql/conf.d/custom.cnf
      - ./mysql_semana3/sql_initdb:/docker-entrypoint-initdb.d
      - ./data:/opt/data

  # PostgreSQL
  # ---------------------------------------------------------------------------
  db_postgres:
    image: postgres
    environment:
      POSTGRES_DB: coderhouse
      POSTGRES_USER: coderhouse
      POSTGRES_PASSWORD: coderhouse
    ports:
      - "5438:5432"
    volumes:
      - ./postgres/sql_initdb:/docker-entrypoint-initdb.d
      - ./data:/opt/data

  # Microsoft SQL Server
  # ---------------------------------------------------------------------------
  db_mssql:
    image: horizoncrafts/mssql-with-initdb
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Express
      SA_PASSWORD: C0d3rhous3
    ports:
      - "1438:1433"
    volumes:
      - ./mssql/sql_initdb:/docker-entrypoint-initdb.d
      - ./data:/opt/data

  # PostgreSQL - semana 3
  # ---------------------------------------------------------------------------
  db_postgres_semana3:
    image: postgres
    environment:
      POSTGRES_DB: coderhouse
      POSTGRES_USER: coderhouse
      POSTGRES_PASSWORD: coderhouse
    ports:
      - "5439:5432"
    volumes:
      - ./postgres_semana3/sql_initdb:/docker-entrypoint-initdb.d
      - ./data:/opt/data

  # Database Web Clients
  # ===========================================================================

  # MySQL - phpmyadmin
  # ---------------------------------------------------------------------------
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8501:80"
    environment:
      PMA_HOST: db_mysql
      MYSQL_ROOT_PASSWORD: coderhouse
    depends_on:
      - db_mysql

  # MySQL - phpmyadmin semana 3
  # ---------------------------------------------------------------------------
  phpmyadmin_semana3:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8508:80"
    environment:
      PMA_HOST: db_mysql_semana3
      MYSQL_ROOT_PASSWORD: coderhouse
    depends_on:
      - db_mysql_semana3

  # PostgreSQL - pgadmin
  # ---------------------------------------------------------------------------
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@coderhouse.com
      PGADMIN_DEFAULT_PASSWORD: coderhouse
      PGADMIN_DISABLE_POSTFIX: 1
    ports:
      - "8502:80"
    depends_on:
      - db_postgres
      - db_postgres_semana3
    volumes:
      - ./pgadmin/config/servers.json:/pgadmin4/servers.json


  # Microsoft SQL Server - sqlpad
  # ---------------------------------------------------------------------------
  sqlpad_mssql:
    image: sqlpad/sqlpad
    environment:
      SQLPAD_ADMIN: 'admin@coderhouse.com'
      SQLPAD_ADMIN_PASSWORD: 'coderhouse'
      SQLPAD_APP_LOG_LEVEL: info
      SQLPAD_WEB_LOG_LEVEL: warn
      SQLPAD_CONNECTIONS__sqlserverdemo__name: SQL Server
      SQLPAD_CONNECTIONS__sqlserverdemo__driver: sqlserver
      SQLPAD_CONNECTIONS__sqlserverdemo__host: db_mssql
      SQLPAD_CONNECTIONS__sqlserverdemo__database: coderhouse
      SQLPAD_CONNECTIONS__sqlserverdemo__username: coderhouse
      SQLPAD_CONNECTIONS__sqlserverdemo__password: C0d3rhous3
    ports:
      - "8503:3000"
    depends_on:
      - db_mssql

  # Python
  # ===========================================================================

  # Jupyter Lab
  # ---------------------------------------------------------------------------
  jupyterlab:
    build:
      context: ./jupyterlab/scripts_docker
    ports:
      - "8504:8888"
    entrypoint: sh -c 'jupyter lab --ip=0.0.0.0 --port=8888 --NotebookApp.token="" --NotebookApp.password="" --no-browser --notebook-dir=/opt/notebooks --allow-root'

  # Python 3.11
  # ---------------------------------------------------------------------------
  python:
    build:
      context: ./python/scripts_docker
    depends_on:
      - db_mssql
      - db_mysql
      - db_postgres
    volumes:
      - ../exercises:/opt/exercises

  # Flask
  # ---------------------------------------------------------------------------
  flask:
    build:
      context: ./flask/scripts_docker
    ports:
      - "8505:5000"
    depends_on:
      - db_mssql
      - db_mysql
      - db_postgres
    volumes:
      - ../exercises:/opt/exercises

  # Fastapi
  # ---------------------------------------------------------------------------
  fastapi:
    build:
      context: ./fastapi/scripts_docker
    ports:
      - "8506:8000"
    depends_on:
      - db_mssql
      - db_mysql
      - db_postgres
    volumes:
      - ../exercises:/opt/exercises

  # Django
  # ---------------------------------------------------------------------------
  django:
    build:
      context: ./django/scripts_docker
    ports:
      - "8507:9600"
    depends_on:
      - db_mssql
      - db_mysql
      - db_postgres
    volumes:
      - ../exercises:/opt/exercises

  # AWS LocalStack
  # ===========================================================================

  # S3 Bucket
  # ---------------------------------------------------------------------------
  s3:
    image: localstack/localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "53:53"                #
      - "53:53/udp"            #
      - "8509:443              #
      - "4510-4530:4510-4530"  # ext services port range
      - "4571:4571"            #
    environment:
      - DEBUG=${DEBUG-}
      - SERVICES=${SERVICES-}
      - DATA_DIR=${DATA_DIR-}
      - LAMBDA_EXECUTOR=local
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-}
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DISABLE_CORS_CHECKS=1
    volumes:
      - "./s3/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"